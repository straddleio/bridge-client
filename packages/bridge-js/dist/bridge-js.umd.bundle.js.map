{"version":3,"file":"bridge-js.umd.bundle.js","sources":["../../bridge-core/dist/types.js","../src/index.ts"],"sourcesContent":["export var EBridgeMessageType;\n(function (EBridgeMessageType) {\n    EBridgeMessageType[\"PING\"] = \"@straddleio/js-bridge/ping\";\n    EBridgeMessageType[\"ERROR\"] = \"@straddleio/js-bridge/error\";\n    EBridgeMessageType[\"INITIALIZE\"] = \"@straddleio/js-bridge/initialize\";\n    EBridgeMessageType[\"INITIALIZING\"] = \"@straddleio/js-bridge/initializing\";\n    EBridgeMessageType[\"INITIALIZED\"] = \"@straddleio/js-bridge/initialized\";\n    EBridgeMessageType[\"MOUNTED\"] = \"@straddleio/js-bridge/mounted\";\n    EBridgeMessageType[\"ON_PAYKEY\"] = \"@straddleio/js-bridge/on-paykey\";\n    EBridgeMessageType[\"ON_SUCCESS\"] = \"@straddleio/js-bridge/on-success\";\n    EBridgeMessageType[\"ON_SUCCESS_CTA_CLICKED\"] = \"@straddleio/js-bridge/on-success-cta-clicked\";\n    EBridgeMessageType[\"ON_CLOSE\"] = \"@straddleio/js-bridge/on-close\";\n    EBridgeMessageType[\"ON_MANUAL_ENTRY\"] = \"@straddleio/js-bridge/on-manual-entry\";\n    EBridgeMessageType[\"ON_RETRY\"] = \"@straddleio/js-bridge/on-retry\";\n    EBridgeMessageType[\"TOKEN\"] = \"@straddleio/js-bridge/token\";\n    EBridgeMessageType[\"DEBUG\"] = \"@straddleio/js-bridge/debug\";\n    EBridgeMessageType[\"CONSOLE\"] = \"@straddleio/js-bridge/console\";\n})(EBridgeMessageType || (EBridgeMessageType = {}));\n","import { EBridgeMessageType, TMessage } from '@straddleio/bridge-core'\n\nexport const straddleBridge = {\n    getUrl: () => `${straddleBridge.origin}/${encodeURIComponent(typeof window !== 'undefined' && window.location.origin)}/`,\n    origin: '',\n    mounted: false,\n    verbose: false,\n    init: function init(params: {\n        appUrl: string\n        token: string\n        onSuccess?: (payload: { paykey: string }) => void\n        onSuccessCTAClicked?: () => void\n        onLoadError?: () => void\n        onManualEntry?: () => void\n        onRetry?: () => void\n        targetRef: HTMLElement | undefined\n        style: Partial<CSSStyleDeclaration>\n        className?: string\n        verbose?: boolean\n    }) {\n        const { appUrl, token, onSuccess, onSuccessCTAClicked, targetRef, style, className, verbose = false } = params\n        straddleBridge.origin = appUrl ?? 'https://dev.straddle.io'\n        verbose && console.log('init called')\n        const iframe = document.createElement('iframe')\n        iframe.setAttribute('src', straddleBridge.getUrl())\n        iframe.id = 'Straddle-widget-iframe'\n        let iframe_style = style\n        if (!style) {\n            iframe_style = { position: 'fixed', width: '100%', height: '100%', top: '0%', left: '0', zIndex: '2147483647' }\n        }\n        Object.assign(iframe.style, iframe_style)\n\n        if (className) {\n            className.split(' ').forEach((className) => {\n                iframe.classList.add(className)\n            })\n        }\n        ;(targetRef || document.getElementsByTagName('body')[0]).appendChild(iframe)\n        typeof window !== 'undefined' &&\n            window.addEventListener(\n                'message',\n                function (event: MessageEvent<TMessage | { type: '@straddleio/bridge-js/console'; method: string; payload: any[] }>) {\n                    if (event.origin === straddleBridge.origin) {\n                        verbose && console.log('Message received from widget:', event.data.type, event)\n                        switch (event.data?.type) {\n                            case EBridgeMessageType.MOUNTED:\n                                if (!straddleBridge.mounted) {\n                                    straddleBridge.mounted = true\n                                    straddleBridge.send({ type: EBridgeMessageType.INITIALIZE, token })\n                                }\n                                break\n                            case EBridgeMessageType.ON_SUCCESS_CTA_CLICKED:\n                                document.getElementsByTagName('body')[0].removeChild(iframe)\n                                onSuccessCTAClicked?.()\n                                break\n                            case EBridgeMessageType.ON_PAYKEY:\n                                onSuccess?.(event.data as any)\n                                break\n                            case '@straddleio/bridge-js/console':\n                                alert(event.data.method)\n                                {\n                                    const parsedPayload: any = event.data.payload.map((item: any) => {\n                                        try {\n                                            return JSON.parse(item)\n                                        } catch {\n                                            return item\n                                        }\n                                    })\n                                    ;(console[event.data.method as keyof typeof console] as Function).apply(console, parsedPayload)\n                                }\n                                break\n                        }\n                    }\n                }\n            )\n    },\n    getIframe: () => document.getElementById('Straddle-widget-iframe') as HTMLIFrameElement,\n    show: () => {\n        straddleBridge.verbose && console.log('straddleBridge.show method called.')\n        const iframe = straddleBridge.getIframe()\n        straddleBridge.verbose && iframe && console.log('iframe found, setting display to block.')\n        iframe.style.display = 'block'\n    },\n    hide: () => {\n        straddleBridge.verbose && console.log('straddleBridge.hide method called.')\n        const iframe = straddleBridge.getIframe()\n        straddleBridge.verbose && iframe && console.log('iframe found, setting display to none.')\n        iframe.style.display = 'none'\n    },\n    remove: () => {\n        straddleBridge.verbose && console.log('straddleBridge.remove method called.')\n        const iframe = straddleBridge.getIframe()\n        iframe.remove()\n        straddleBridge.mounted = false\n    },\n    send: function send(message: TMessage) {\n        const iframe = document.getElementById('Straddle-widget-iframe') as HTMLIFrameElement\n        console.log('sending message:', message)\n        iframe?.contentWindow?.postMessage(message, straddleBridge.origin)\n    },\n}\ntypeof window !== 'undefined' && ((window as any).straddleBridge = straddleBridge)\n\nObject.defineProperty(straddleBridge, 'debug', {\n    value: {\n        enable: () => straddleBridge.send({ type: EBridgeMessageType.DEBUG, enable: true }),\n        disable: () => straddleBridge.send({ type: EBridgeMessageType.DEBUG, enable: false }),\n    },\n    enumerable: false,\n    writable: false,\n    configurable: false,\n})\n"],"names":["EBridgeMessageType","straddleBridge","getUrl","origin","encodeURIComponent","window","location","mounted","verbose","init","params","appUrl","token","onSuccess","onSuccessCTAClicked","targetRef","style","className","console","log","iframe","document","createElement","setAttribute","id","iframe_style","position","width","height","top","left","zIndex","Object","assign","split","forEach","classList","add","getElementsByTagName","appendChild","addEventListener","event","data","type","_a","MOUNTED","send","INITIALIZE","ON_SUCCESS_CTA_CLICKED","removeChild","ON_PAYKEY","alert","method","parsedPayload","payload","map","item","JSON","parse","apply","getIframe","getElementById","show","display","hide","remove","message","contentWindow","postMessage","defineProperty","value","enable","DEBUG","disable","enumerable","writable","configurable"],"mappings":"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"}